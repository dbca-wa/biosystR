% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/biosys_get.R
\name{biosys_get}
\alias{biosys_get}
\title{Return JSON from a BioSys API endpoint}
\usage{
biosys_get(serializer, api = "https://biosys.dbca.wa.gov.au/api/",
  un = Sys.getenv("BIOSYS_UN"), pw = Sys.getenv("BIOSYS_PW"),
  query = list())
}
\arguments{
\item{serializer}{(character) WAStD API serializer name (required).
Possible values as per
\code{https://strandings.dpaw.wa.gov.au/api/1/?format=corejson} are:
\itemize{
\item projects
\item datasets
\item records
\item sites
}}

\item{query}{(list) API query parameters for format, limit, filtering
(default: list(taxon='Cheloniidae', limit=10000, format='json'))}

\item{api_url}{(character) The WAStD API URL,
default \code{\link{get_wastdr_api_url}}, see \code{\link{wastdr_setup}}}

\item{api_token}{(character) The WAStD API token,
default \code{\link{get_wastdr_api_token}}, see \code{\link{wastdr_setup}}}

\item{simplify}{(Boolean) Whether to flatten nested data frames into a single
data frame with repeating unnamed groups as lists (simplify = TRUE), or as
list of lists (default: FALSE)}
}
\value{
An S3 object of class 'wastd_api_response' containing:

  content: The retrieved GeoJSON features as data.table or list

  serializer: The called serializer, e.g. 'projects'

  response: The API HTTP response with all metadata
}
\description{
Call the WAStD API serializer's list view with given GET parameters,
  parse the response as text into a GeoJSON FeatureCollection.
  Parse the FeatureCollection using jsonlite::fromJSON and return its features
  as nested data.frame (simplify=TRUE) or as list of lists (simplify=FALSE).
  TODO: use pagination, see
  \url{https://cran.r-project.org/web/packages/jsonlite/vignettes/json-paging.html}
}

